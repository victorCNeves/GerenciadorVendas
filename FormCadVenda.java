//Victor Hugo Concolato Neves - 2576139

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author conco
 */
public class FormCadVenda extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormCadVenda.class.getName());
    private DefaultTableModel modTab;
    private Venda venda;
    private BdMovel bdMovel = BdMovel.getInstance();
    private BdPessoa bdPessoa = BdPessoa.getInstance();
    private BdVenda bdVenda = BdVenda.getInstance();
    
    //Inicio Singleton
    private static FormCadVenda cadVendaInstance;
    
    private FormCadVenda() {
        initComponents();
    }
    
    public static FormCadVenda getInstance(){
        if(cadVendaInstance==null){
            cadVendaInstance = new FormCadVenda();
        }
        return cadVendaInstance;
    }
    //Fim Singleton

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtTitulo = new javax.swing.JLabel();
        rtId = new javax.swing.JLabel();
        cxId = new javax.swing.JFormattedTextField();
        rtData = new javax.swing.JLabel();
        cxData = new javax.swing.JFormattedTextField();
        rtVendedor = new javax.swing.JLabel();
        cxVendedor = new javax.swing.JFormattedTextField();
        rtCliente = new javax.swing.JLabel();
        cxCliente = new javax.swing.JFormattedTextField();
        rtNomeVendedor = new javax.swing.JLabel();
        rtNomeCliente = new javax.swing.JLabel();
        rtMovel = new javax.swing.JLabel();
        cxMovel = new javax.swing.JFormattedTextField();
        rtQuantidade = new javax.swing.JLabel();
        cxQuantidade = new javax.swing.JFormattedTextField();
        rtValorMovel = new javax.swing.JLabel();
        cxValorMovel = new javax.swing.JFormattedTextField();
        rtNomeMovel = new javax.swing.JLabel();
        rtValorTotal = new javax.swing.JLabel();
        cxValorTotal = new javax.swing.JFormattedTextField();
        btAdd = new javax.swing.JButton();
        btCadastrar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        rtValorTotalVenda = new javax.swing.JLabel();
        cxValorTotalVenda = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMovel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        rtTitulo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtTitulo.setText("Registro de Vendas");

        rtId.setText("ID:");

        cxId.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        rtData.setText("Data:");

        try {
            cxData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        rtVendedor.setText("Vendedor (ID):");

        cxVendedor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cxVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cxVendedorKeyReleased(evt);
            }
        });

        rtCliente.setText("Cliente (ID):");

        cxCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cxCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cxClienteKeyReleased(evt);
            }
        });

        rtMovel.setText("Movel (ID):");

        cxMovel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cxMovel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cxMovelKeyReleased(evt);
            }
        });

        rtQuantidade.setText("Quantidade:");

        cxQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        cxQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cxQuantidadeKeyReleased(evt);
            }
        });

        rtValorMovel.setText("Valor (Un)");

        cxValorMovel.setEditable(false);
        cxValorMovel.setEnabled(false);

        rtValorTotal.setText("Valor Total");

        cxValorTotal.setEditable(false);
        cxValorTotal.setEnabled(false);

        btAdd.setText("+");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btCadastrar.setText("Cadastrar");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        rtValorTotalVenda.setText("Valor Total");

        cxValorTotalVenda.setEditable(false);
        cxValorTotalVenda.setEnabled(false);

        tbMovel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ³vel", "Quantidade", "Valor Un", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMovel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMovelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMovel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(rtValorTotalVenda)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cxValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btCadastrar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btLimpar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btSair))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rtId, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtCliente)
                            .addComponent(rtVendedor)
                            .addComponent(rtMovel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtQuantidade)
                            .addComponent(rtValorMovel))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cxVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cxValorMovel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxMovel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rtNomeMovel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rtData, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cxData, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rtValorTotal)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cxValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(rtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtNomeVendedor))
                        .addGap(0, 16, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(rtTitulo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(rtTitulo)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtId)
                            .addComponent(rtData))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rtCliente)
                                    .addComponent(rtNomeCliente)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cxVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rtVendedor)
                                .addComponent(rtNomeVendedor)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxMovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtMovel)
                            .addComponent(rtNomeMovel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cxValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rtValorTotal))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cxQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rtQuantidade)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxValorMovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtValorMovel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rtValorTotalVenda)
                            .addComponent(cxValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btCadastrar)
                            .addComponent(btSair)
                            .addComponent(btLimpar)))
                    .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        try {
            addMovelTable();
        } catch (ValorNumericoInvalidoException ex) {
             JOptionPane.showMessageDialog(null, ex.impErro(), "Erro", JOptionPane.OK_OPTION);
        } catch (VendaInvalidaException ex) {
             JOptionPane.showMessageDialog(null, ex.impErro(), "Erro", JOptionPane.OK_OPTION);
        } catch (EstoqueInsuficienteException ex) {
             JOptionPane.showMessageDialog(null, ex.impErro(), "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btAddActionPerformed

    private void cxQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxQuantidadeKeyReleased
        calculaValorTotalMovel();
    }//GEN-LAST:event_cxQuantidadeKeyReleased

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        try {
            cadastrar();
        } catch (ValorNumericoInvalidoException ex) {
            JOptionPane.showMessageDialog(null, ex.impErro(), "Erro", JOptionPane.OK_OPTION);
        } catch (VendaInvalidaException ex) {
            JOptionPane.showMessageDialog(null, ex.impErro(), "Erro", JOptionPane.OK_OPTION);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btCadastrarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limparForm();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void cxMovelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxMovelKeyReleased
        nomeMovel();
    }//GEN-LAST:event_cxMovelKeyReleased

    private void cxClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxClienteKeyReleased
        nomePessoa(true);
    }//GEN-LAST:event_cxClienteKeyReleased

    private void cxVendedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cxVendedorKeyReleased
        nomePessoa(false);
    }//GEN-LAST:event_cxVendedorKeyReleased

    private void tbMovelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMovelMouseClicked
        if(evt.getClickCount()>1){
            mudarMovel();
        }
    }//GEN-LAST:event_tbMovelMouseClicked
    
    private void sair(){
        int escolha = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair da tela de cadastro de vendas?", "Confirmar SaÃ­da", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(escolha==0){
            limparForm();
            this.dispose();            
        }
    }
    
    private void mudarMovel(){
        for (ItemVenda itemVenda : venda.getItensVenda()) {
            Movel m = itemVenda.getMovel();
            int row = tbMovel.getSelectedRow();
            //Reflexividade
            if(m.getNome().equals(modTab.getValueAt(row, 0)) && itemVenda.getQuantidade()==((Number)modTab.getValueAt(row, 1)).intValue() && m.getValor().getValorVenda()==((Number)modTab.getValueAt(row, 2)).doubleValue()){
                modTab.removeRow(row);
                cxMovel.setValue(m.getId());
                cxQuantidade.setValue(itemVenda.getQuantidade());
                venda.getItensVenda().remove(itemVenda);
                nomeMovel();
                calculaValorTotalMovel();
                break;
            }
        }
    }
    
    private void cadastrar() throws ValorNumericoInvalidoException, VendaInvalidaException{
        int escolha = JOptionPane.showConfirmDialog(null, "VocÃª estÃ¡ prestes a registrar esta venda. Uma vez confirmada, nÃ£o serÃ¡ possÃ­vel realizar alteraÃ§Ãµes. Deseja continuar?", "ConfirmaÃ§Ã£o de Registro de Venda", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if(escolha==0){                   
            if(verificaPreenchimento()){
                venda.setId(((Number) cxId.getValue()).intValue());
                venda.setCliente((Cliente) bdPessoa.getPessoa(((Number) cxCliente.getValue()).intValue()));
                venda.setVendedor((Vendedor) bdPessoa.getPessoa(((Number) cxVendedor.getValue()).intValue()));
                venda.setData(LocalDate.parse(cxData.getText(),DateTimeFormatter.ofPattern("dd/MM/uuuu")));            
                bdVenda.cadVenda(venda);
                venda.realizarVenda();
                JOptionPane.showMessageDialog(null,
                        "A venda foi cadastrada com sucesso!\n"
                        +venda.exibirInformacoes(),
                        "Cadastro ConcluÃ­do",
                        JOptionPane.INFORMATION_MESSAGE);
                venda = new Venda();
                limparForm();
            }else{
                JOptionPane.showMessageDialog(null, "Todos os campos do formulÃ¡rio sÃ£o obrigatÃ³rios. Por favor, preencha-os para continuar.", "Campos ObrigatÃ³rios", JOptionPane.OK_OPTION);
            }
        }
    }
    
    private void limparForm(){
        cxCliente.setValue(null);
        cxData.setValue(null);
        cxId.setValue(null);
        cxMovel.setValue(null);
        cxQuantidade.setValue(null);
        cxValorMovel.setValue(null);
        cxValorTotal.setValue(null);
        cxValorTotalVenda.setValue(null);
        cxVendedor.setValue(null);
        rtNomeMovel.setText("");
        rtNomeCliente.setText("");
        rtNomeVendedor.setText("");
        modTab.setRowCount(0);
        venda.getItensVenda().clear();
    }
    
    private boolean verificaPreenchimento(){        
        return !(cxId.getText().isBlank() || cxData.getText().contains(" ") || rtNomeVendedor.getText().isBlank() || rtNomeCliente.getText().isBlank() || tbMovel.getRowCount()==0);
    }
    
    private void nomePessoa(boolean cliente) {
        String valor = cliente ? cxCliente.getText(): cxVendedor.getText();

        if (!valor.isBlank()) {
            int id = Integer.parseInt(valor);
            Pessoa p = bdPessoa.getPessoa(id);

            String nomeOuErro = (p != null) ? p.getNome() : "ID invÃ¡lido!";

            if (cliente) {
                if(p instanceof Cliente){
                    rtNomeCliente.setText(nomeOuErro);
                }else{
                    rtNomeCliente.setText("ID invÃ¡lido!");
                }
            } else {
                if(p instanceof Vendedor){
                    rtNomeVendedor.setText(nomeOuErro);
                }else{
                    rtNomeVendedor.setText("ID invÃ¡lido!");
                }
            }
        }
    }
    
    private void calculaValorTotalMovel(){
        if(!(rtNomeMovel.getText().isBlank() || cxQuantidade.getText().isBlank())){
            cxValorTotal.setValue(((Number)cxValorMovel.getValue()).doubleValue()*(Integer.parseInt(cxQuantidade.getText())));
        }
    }
    
    private void nomeMovel(){
        if(!cxMovel.getText().isBlank()){            
            Movel m = bdMovel.getMovel(Integer.parseInt(cxMovel.getText()));
            
            if(m!=null){
                rtNomeMovel.setText(m.getNome());
                //Reflexividade
                cxValorMovel.setValue(m.getValor().getValorVenda());
            }else{
                rtNomeMovel.setText("Id invÃ¡lido!");
            }
            
        }
    }
    
    private void addMovelTable() throws ValorNumericoInvalidoException, VendaInvalidaException, EstoqueInsuficienteException{
        if(!(rtNomeMovel.getText().isBlank() || cxQuantidade.getText().isBlank())){
            venda.addMovel(bdMovel.getMovel(Integer.parseInt(cxMovel.getText())), ((Integer.parseInt(cxQuantidade.getText().replace(".", "")))));
            cxMovel.setValue(Integer.parseInt(cxMovel.getText()));
            cxQuantidade.setValue(Integer.parseInt(cxQuantidade.getText().replace(".", "")));

            ItemVenda item = venda.getItensVenda().get(venda.getItensVenda().size()-1);
            
            //Reflexividade
            modTab.addRow(new Object[]{item.getMovel().getNome(), item.getQuantidade(), item.getMovel().getValor().getValorVenda(), item.calcularValorTotal()});
            cxValorTotalVenda.setValue(venda.calcularValorTotal());
            
            cxQuantidade.setValue(null);
            cxMovel.setValue(null);
            cxValorMovel.setValue(null);
            cxValorTotal.setValue(null);
            rtNomeMovel.setText("");        
        }else{
            JOptionPane.showMessageDialog(null, "Preencha todos os campos relacionado ao mÃ³vel para adicionÃ¡-lo!", "Campos nÃ£o preenchidos", JOptionPane.OK_OPTION);
        }
    }
    
    public void init(){
        this.setVisible(true);
        modTab = (DefaultTableModel) tbMovel.getModel();
        venda = new Venda();
    }
       
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FormCadVenda().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JFormattedTextField cxCliente;
    private javax.swing.JFormattedTextField cxData;
    private javax.swing.JFormattedTextField cxId;
    private javax.swing.JFormattedTextField cxMovel;
    private javax.swing.JFormattedTextField cxQuantidade;
    private javax.swing.JFormattedTextField cxValorMovel;
    private javax.swing.JFormattedTextField cxValorTotal;
    private javax.swing.JFormattedTextField cxValorTotalVenda;
    private javax.swing.JFormattedTextField cxVendedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rtCliente;
    private javax.swing.JLabel rtData;
    private javax.swing.JLabel rtId;
    private javax.swing.JLabel rtMovel;
    private javax.swing.JLabel rtNomeCliente;
    private javax.swing.JLabel rtNomeMovel;
    private javax.swing.JLabel rtNomeVendedor;
    private javax.swing.JLabel rtQuantidade;
    private javax.swing.JLabel rtTitulo;
    private javax.swing.JLabel rtValorMovel;
    private javax.swing.JLabel rtValorTotal;
    private javax.swing.JLabel rtValorTotalVenda;
    private javax.swing.JLabel rtVendedor;
    private javax.swing.JTable tbMovel;
    // End of variables declaration//GEN-END:variables
}
